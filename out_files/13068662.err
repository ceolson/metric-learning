/n/home10/colson/metric-learning/metric_learning_experiment.py:16: DeprecationWarning: `np.math` is a deprecated alias for the standard library `math` module (Deprecated Numpy 1.25). Replace usages of `np.math` with `math`
  Astar = np.random.normal(0, 1, size=(p, r)) / np.math.sqrt(p)
/n/home10/colson/metric-learning/metric_learning_experiment.py:33: DeprecationWarning: `np.math` is a deprecated alias for the standard library `math` module (Deprecated Numpy 1.25). Replace usages of `np.math` with `math`
  prob = 1 / (1 + np.math.exp(m_dist2(X[i], X[k], Kstar) - m_dist2(X[i], X[j], Kstar)))
Traceback (most recent call last):
  File "/n/home10/colson/metric-learning/metric_learning_experiment.py", line 143, in <module>
    loss.backward()
  File "/n/home10/colson/.local/lib/python3.10/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/n/home10/colson/.local/lib/python3.10/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.38 GiB. GPU 0 has a total capacty of 39.39 GiB of which 646.69 MiB is free. Including non-PyTorch memory, this process has 38.75 GiB memory in use. Of the allocated memory 38.25 GiB is allocated by PyTorch, and 6.86 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
